{"version":3,"sources":["context/context.js","utils/closeAllModals.js","components/Home/AllowGeolocation.js","utils/translations.js","components/Home/SignUpForm.js","components/Home/SignInForm.js","components/Home/Modal.js","components/Home/guest-user-button.js","components/Home/SignInButton.js","components/Home/SignUpButton.js","utils/animationVariations.js","components/Home/Home.js","components/Header/HeaderDropdown/MenuToggle.js","components/Header/LogOutButton.js","components/Header/HeaderDropdown/Navigation.js","components/Header/HeaderDropdown/HeaderDropdown.js","components/Header/HeaderDropdown/useDimensions.js","components/Header/Header.js","components/pages/Days.js","components/pages/Intervals.js","components/pages/Plans.js","assets/workout_countdown_haptic.mp3","components/Timer/Timer.js","components/Timer/FinishedData.js","components/Timer/Finished.js","components/EditUser/PasswordChange.js","components/EditUser/LogOutAllDevices.js","components/EditUser/DeleteAccount.js","components/EditUser/EditUserData.js","components/EditUser/EditUser.js","components/AdminPage/AdminEditUser.js","components/AdminPage/AdminAddsPlan.js","components/AdminPage/AdminUpdatesPlan.js","components/AdminPage/AdminPage.js","App.js","reportWebVitals.js","index.js"],"names":["PlanContext","createContext","usePlanContext","useContext","PlanProvider","children","useState","modalType","setModalType","plans","setPlans","currentPlan","setCurrentPlan","currentDayId","setCurrentDayId","intervals","setIntervals","totalIntervals","setTotalIntervals","fetchPlansAgain","setFetchPlansAgain","userData","setUserData","finishedDays","setFinishedDays","token","setToken","startingLng","setStartingLng","startingLat","setStartingLat","coordinatesArray","setCoordinatesArray","coordinatesObject","setCoordinatesObject","reqUrl","setReqUrl","useEffect","fetch","then","res","json","data","catch","e","console","log","Provider","value","closeAllModals","modals","document","getElementsByClassName","length","i","classList","remove","setAttribute","modalsBackdrops","modalsBackdropLength","body","removeChild","Switch","isOn","rest","customClassName","className","motion","div","animate","AllowGeolocation","setIsOn","message","setMessage","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","onClick","deletingAccount","english","italian","dutch","serbian","french","passwordChange","passwordSaved","passwordLongerThan","passwordContainsLetters","passwordSpecialCharacters","passwordContainsNumber","salutation","run","walk","congrats","required","insertValidWeight","invalidEmail","insertValidHeight","languageName","allowGeolocation","validate","values","errors","password","test","email","username","SignUpForm","fetchPlans","setFetchPlans","inputUserData","setInputUserData","language","setLanguage","history","useHistory","formik","useFormik","initialValues","onSubmit","method","headers","JSON","stringify","user","push","autoComplete","preventDefault","handleSubmit","noValidate","name","id","placeholder","onChange","handleChange","type","DropdownButton","title","Dropdown","Item","as","onSelect","SignInForm","errorMessage","setErrorMessage","submitHandler","event","a","Object","keys","Error","undefined","from","data-testid","Modal","tabIndex","role","aria-labelledby","aria-hidden","data-dismiss","aria-label","GuestUserButton","SignInButton","data-toggle","data-target","SignUpButton","sidebar","open","height","clipPath","transition","stiffness","restDelta","closed","delay","damping","variantsButtons","opacity","x","y","velocity","variantsTitle","hidden","visible","variantsItems","variantsArrow","Home","AnimatePresence","h1","variants","initial","Path","props","path","fill","strokeWidth","stroke","strokeLinecap","MenuToggle","toggle","width","viewBox","d","duration","LogOutButton","logOut","setLogOut","li","whileHover","scale","whileTap","Navigation","ul","HeaderDropdown","useCycle","isOpen","toggleOpen","containerRef","useRef","ref","dimensions","current","offsetWidth","offsetHeight","useDimensions","nav","custom","Header","goBack","Days","planID","_id","days","setDays","languageProperty","map","day","button","data-dayid","has","target","dataset","dayid","goToIntervals","Intervals","total","forEach","interval","seconds","Date","toISOString","substr","Plans","Map","dayID","userID","plan","index","data-plan-index","planIndex","goToDays","Timer","shouldPlay","setShouldPlay","timeLeft","setTimeLeft","totalTimePercentage","Math","floor","currentInterval","setCurrentInterval","currentIntervalIndex","setCurrentIntervalIndex","currentIntervalTime","setCurrentIntervalTime","intervalPercentage","useSound","workoutCountdown","play","setTimeout","currentArray","currentObject","newArray","temp","h2","ProgressBar","striped","variant","now","animated","FinishedData","userWeightInKG","weight","getPathLength","caloriesBurned","Finished","fallback","PasswordChange","inputPassword","setInputPassword","updatePassword","setUpdatePassword","patch","setPatch","passwordChangeText","LogOutAllDevices","clicked","setClicked","DeleteAccount","setRemove","confirmButton","setConfirmButton","deletingAccountText","EditUserData","edit","setEdit","setEditable","editable","defaultValue","EditUser","AdminEditUser","userList","setUserList","userUpdateVisible","setUserUpdateVisible","selectedUser","setSelectedUser","deleteUser","setDeleteUser","updateUsersList","setUpdateUsersList","updateSelectedUser","setUpdateSelectedUser","updateUser","setUpdateUser","inputData","setInputData","data-userID","englishName","italianName","frenchName","serbianName","dutchName","AdminAddsPlan","createPlan","setCreatePlan","AdminUpdatesPlan","selectedPlan","setSelectedPlan","data-planID","AdminPage","addPlan","setAddPlan","adminUpdatesPlan","setAdminUpdatesPlan","App","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.28a07512.chunk.js","sourcesContent":["import React, { createContext, useContext, useState, useEffect} from 'react';\n\nexport const PlanContext = createContext();\n\nexport const usePlanContext = () => useContext(PlanContext);\n\nexport function PlanProvider({children}) {\n    // sign up or sign in modal\n    const [modalType, setModalType] = useState('');\n\n    // workouts data\n    const [plans, setPlans] = useState([]);\n    const [currentPlan, setCurrentPlan]= useState('');\n    const [currentDayId, setCurrentDayId]= useState('');\n    const [intervals, setIntervals] = useState([])\n    const [totalIntervals, setTotalIntervals] = useState(0);\n\n    // when admin updates plans\n    const [fetchPlansAgain, setFetchPlansAgain] = useState(false)\n\n    const [userData, setUserData] = useState({});\n    const [finishedDays, setFinishedDays]= useState({});\n    const [token, setToken] = useState('');\n\n    // map data\n    const [startingLng, setStartingLng] = useState(0);\n    const [startingLat, setStartingLat] = useState(0);\n    const [coordinatesArray, setCoordinatesArray]= useState([]);\n    const [coordinatesObject, setCoordinatesObject]= useState([]);\n\n    const requestUrl = process.env.NODE_ENV === 'development' ?\n        'http://localhost:3001' :\n        'https://almarina91-apollo-backend.herokuapp.com';\n\n    // set request url (dev or production)\n    const [reqUrl, setReqUrl] = useState(requestUrl)\n\n    useEffect(() => {\n        fetch(`${reqUrl}/plans`)\n            .then(res => res.json())\n            .then(data => setPlans(data))\n            .catch(e => console.log(e))\n        }, []);\n\n    return (\n        <PlanContext.Provider value={\n            {plans,\n            setPlans,\n            currentPlan,\n            setCurrentPlan,\n            currentDayId,\n            setCurrentDayId,\n            userData,\n            setUserData,\n            modalType,\n            setModalType,\n            token,\n            setToken,\n            totalIntervals,\n            setTotalIntervals,\n            intervals,\n            setIntervals,\n            startingLat,\n            setStartingLat,\n            startingLng,\n            setStartingLng,\n            coordinatesArray,\n            setCoordinatesArray,\n            finishedDays,\n            setFinishedDays,\n            coordinatesObject,\n            setCoordinatesObject,\n            fetchPlansAgain,\n            setFetchPlansAgain,\n            reqUrl,\n            setReqUrl\n            }\n        }>\n            {children}\n        </PlanContext.Provider>\n    )\n}","export function closeAllModals() {\n    const modals = document.getElementsByClassName('modal');\n    const length = modals.length;\n\n    for(let i=0; i<length; i++) {\n        modals[i].classList.remove('show');\n        modals[i].setAttribute('aria-hidden', 'true');\n        modals[i].setAttribute('style', 'display: none');\n    }\n    const modalsBackdrops = document.getElementsByClassName('modal-backdrop');\n\n    const modalsBackdropLength = modalsBackdrops.length;\n\n    for(let i=0; i < modalsBackdropLength; i++) {\n        document.body.removeChild(modalsBackdrops[i]);\n    }\n}","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { usePlanContext } from \"../../context/context\";\n\nconst Switch = ({ isOn, ...rest }) => {\n    const customClassName =\n        `toggleSwitch ${isOn ? \"on\" : \"off\"}`;\n\n    return (\n        <div className='geolocation-container'>\n            <br/>\n            <span className='geolocation-text'>allow location data</span>\n            <motion.div animate className=\n                {customClassName} {...rest}>\n                <motion.div animate>\n                    <i className='fa fa-circle white'/>\n                </motion.div>\n            </motion.div>\n        </div>\n    );\n};\n\nexport const AllowGeolocation = () => {\n    const [isOn, setIsOn] = useState(false);\n    const { setStartingLat, setStartingLng } = usePlanContext();\n    const [message, setMessage] = useState(false)\n\n    useEffect(() => {\n        // gets the first coordinate if geolocation allowed\n        if (isOn){\n            navigator.geolocation ?\n                navigator.geolocation.getCurrentPosition(position => {\n                setStartingLat(position.coords.latitude);\n                setStartingLng(position.coords.longitude);})\n            :\n                setMessage(true)\n        }\n    }, [isOn]);\n\n    return (\n        <div>\n            <Switch isOn={isOn}\n                   onClick={() => setIsOn(!isOn)} />\n            {message ? <div>geolocation not supported by your browser</div>: null}\n        </div>);\n};","export const deletingAccount = {\n    english: 'Are you sure',\n    italian: 'Puoi confermare',\n    dutch: 'Ben je zeker',\n    serbian: 'Zelis da obrises nalog',\n    french: 'Es-tu sûr'\n}\n\nexport const passwordChange = {\n    english: 'type your new password',\n    italian: 'la tua nuova password',\n    dutch: 'uw nieuwe wachtwoord',\n    serbian: 'unesi novu lozinku',\n    french: 'votre nouveau mot de passe'\n}\n\nexport const passwordSaved = {\n    english: 'password saved',\n    italian: 'password salvata',\n    dutch: 'wachtwoord opgeslagen',\n    serbian: 'lozinka sacuvana',\n    french: 'mot de passe enregistré'\n}\n\nexport const passwordLongerThan = {\n    english: 'Must be longer than 8 characters',\n    italian: 'Deve contenere più di 8 caratteri',\n    dutch: 'Moet langer zijn dan 8 tekens',\n    serbian: 'Sifra mora sadrzati vise od 8 karaktera',\n    french: 'Doit contenir plus de 8 caractères'\n}\n\nexport const passwordContainsLetters = {\n    english: 'Must contain 1 lowercase and 1 capital letter',\n    italian: 'Deve contenere 1 lettera minuscola e 1 lettera maiuscola',\n    dutch: 'Moet 1 kleine letter en 1 hoofdletter bevatten',\n    serbian: 'Mora sadrzati 1 veliko i 1 malo slovo',\n    french: 'Doit contenir 1 minuscule et 1 majuscule lettre'\n}\n\nexport const passwordSpecialCharacters = {\n    english: 'Must contain at least 1 special character',\n    italian: 'Deve contenere almeno 1 carattere speciale',\n    dutch: 'Moet ten minste één speciaal teken bevatten',\n    serbian: 'Mora sadrzati barem 1 specijalni karakter',\n    french: 'Doit contenir au moins 1 caractère spécial'\n}\n\nexport const passwordContainsNumber = {\n    english: 'Must contain at least 1 number',\n    italian: 'Deve contenere almeno 1 numero',\n    dutch: 'Moet ten minste 1 cijfer bevatten ',\n    serbian: 'Mora sadrzati barem jednu cifru',\n    french: 'Doit contenir au moins 1 chiffre'\n}\n\nexport  const salutation = {\n    english: 'Hello',\n    italian: 'Ciao',\n    french: 'Salut',\n    serbian: 'Zdravo',\n    dutch: 'Hoi'\n}\n\nexport const run = {\n    english: 'Run',\n    italian: 'Correre',\n    french: 'Courir',\n    serbian: 'Trčanje',\n    dutch: 'Rennen'\n}\nexport const walk = {\n    english: 'Walk',\n    italian: 'Camminare',\n    french: 'Marcher',\n    serbian: 'Hodanje',\n    dutch: 'Lopen'\n}\n\nexport const congrats = {\n    english: 'You did it',\n    italian: 'Congratulazioni',\n    serbian: 'Čestitam',\n    dutch: 'Goed gedaan',\n    french: 'Bien joué'\n}\n\nexport const required = {\n    english: 'Required',\n    italian: 'Campo Obbligatorio',\n    dutch: 'Verplicht veld',\n    serbian: 'Obavezno polje',\n    french: 'Champs requis'\n}\n\nexport const insertValidWeight = {\n    english: 'insert valid weight in kgs',\n    italian: 'inserisci il peso valido in kg',\n    dutch: 'voer een geldig gewicht in kg in',\n    serbian: 'unestite validnu tezinu u kg',\n    french: 'insérez un poids valide en kg'\n}\n\nexport const invalidEmail = {\n    english: 'Invalid email',\n    italian: 'e-mail non valido',\n    dutch: 'Ongeldig e-mail',\n    serbian: 'Email nije validan',\n    french: 'Email invalide'\n}\n\nexport const insertValidHeight = {\n    english: 'insert valid height in cm',\n    italian: 'inserisci altezza valida in cm',\n    dutch: 'voer geldige hoogte in cm in',\n    serbian: 'unesi validnu visinu u cm',\n    french: 'insérez une hauteur valide en cm'\n}\n\nexport const languageName = {\n    english: 'english',\n    italian: 'italian',\n    dutch: 'dutch',\n    serbian: 'serbian',\n    french: 'french'\n}\n\nexport const allowGeolocation = {\n    english: 'please allow geolocation in order to see more data',\n    italian: 'si prega di consentire la geolocalizzazione per vedere più dati',\n    dutch: 'sta geolocatie toe om meer gegevens te zien',\n    serbian: 'omoguci geolokaciju da bi vise podataka bilo prikazano',\n    french: 'veuillez autoriser la géolocalisation afin de voir plus de données'\n}","import React, { useEffect, useState } from 'react';\nimport { useFormik } from 'formik';\nimport { usePlanContext } from \"../../context/context\";\nimport { Dropdown, DropdownButton } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport { closeAllModals } from \"../../utils/closeAllModals\";\nimport { AllowGeolocation } from \"./AllowGeolocation\";\nimport { languageName } from \"../../utils/translations\";\n\nconst required = 'Required';\n\nconst validate = values => {\n    const errors = {};\n    if (!values.password) {\n        errors.password = required;\n    } else if (values.password.length < 8) {\n        errors.password = 'Must be longer than 8 characters';\n    } else if (!/[A-Z]/.test(values.password)) {\n        errors.password = 'Must contain at least 1 capital letter';\n    } else if (!/[a-z]/.test(values.password)) {\n        errors.password = 'Must contain at least 1 lowercase letter';\n    } else if (!/[@#$^+=!]/.test(values.password)) {\n        errors.password = 'Must contain at least 1 special character';\n    } else if (!/[0-9]/.test(values.password)) {\n        errors.password = 'Must contain at least 1 number';\n    }\n    if (!values.email) {\n        errors.email =required;\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n        errors.email = 'invalid email';\n    }\n    if (!values.username) {\n        errors.username = required;\n    }\n    return errors;\n};\n\nexport const SignUpForm = () => {\n    const { setUserData, setToken, reqUrl } = usePlanContext();\n\n    const [fetchPlans, setFetchPlans] = useState(false)\n    const [inputUserData, setInputUserData]= useState({})\n\n    const [language, setLanguage] = useState(languageName.english);\n\n    let history = useHistory();\n\n    const formik = useFormik({\n        initialValues: {\n            email:'',\n            password: '',\n            username:''\n        },\n        validate,\n        onSubmit: values => {\n            setFetchPlans(true)\n            setInputUserData({...values, language:language})\n        },\n    });\n\n    useEffect(() => {\n        if (fetchPlans) {\n                fetch(`${reqUrl}/users`,{\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify(inputUserData)})\n                    .then(res => res.json())\n                    .then(data => {\n                        setUserData(data.user)\n                        setToken(data.token)\n                    })\n                    .then(() => history.push(\"/plans\"))\n                    .then(()=> closeAllModals())\n                    .catch(e => console.log(e))\n        }\n    } , [inputUserData])\n\n    return(\n        <form autoComplete=\"off\" onSubmit={(e) => { e.preventDefault(); formik.handleSubmit(e)}} noValidate>\n            <input\n                name='username'\n                className='modal-input'\n                id=\"username\"\n                placeholder=\"username\"\n                onChange={formik.handleChange}\n                value={formik.values.username}/>\n            { formik.errors.username ? <div className='errors'>{formik.errors.username}</div> : null}\n\n            <input\n                name=\"email\"\n                type=\"email\"\n                className='modal-input'\n                id=\"email\"\n                placeholder=\"email\"\n                onChange={formik.handleChange}\n                value={formik.values.email}/>\n            { formik.errors.email ? <div className='errors'>{formik.errors.email}</div> : null}\n            <input\n                name=\"password\"\n                type=\"password\"\n                className='modal-input'\n                id=\"password\"\n                placeholder=\"password\"\n                onChange={formik.handleChange}\n                value={formik.values.password}/>\n            { formik.errors.password ? <div className='errors'>{formik.errors.password}</div> : null}\n\n            <DropdownButton id=\"dropdown-item-button\" title={language} onClick={e=>e.preventDefault()}>\n                <Dropdown.Item as=\"button\" onSelect={()=> setLanguage(languageName.english)}>english</Dropdown.Item>\n                <Dropdown.Item as=\"button\" onSelect={()=>setLanguage(languageName.italian)}>italian</Dropdown.Item>\n                <Dropdown.Item as=\"button\" onSelect={()=>setLanguage(languageName.dutch)}>dutch</Dropdown.Item>\n                <Dropdown.Item as=\"button\" onSelect={()=>setLanguage(languageName.serbian)}>serbian</Dropdown.Item>\n                <Dropdown.Item as=\"button\" onSelect={()=>setLanguage(languageName.french)}>french</Dropdown.Item>\n            </DropdownButton>\n            <br/>\n            <AllowGeolocation />\n            <br/>\n            <button type=\"submit\" className=\"btn btn-modal\">sign up</button>\n        </form>\n    )\n}","import React, {useEffect, useState} from 'react';\nimport { useFormik } from 'formik';\nimport { usePlanContext } from \"../../context/context\";\nimport { useHistory } from \"react-router-dom\";\nimport { closeAllModals } from \"../../utils/closeAllModals\";\nimport { AllowGeolocation } from \"./AllowGeolocation\";\n\nconst required = 'Required';\n\nconst validate = values => {\n    const errors = {};\n    if (!values.email) {\n        errors.email = required;\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n        errors.email = 'Invalid email';\n    }\n    if (!values.password) {\n        errors.password = required;\n    }\n    return errors;\n};\n\nexport const SignInForm = () => {\n    const { userData, setUserData, setToken, reqUrl } = usePlanContext();\n    const [fetchPlans, setFetchPlans] = useState(false)\n    const [inputUserData, setInputUserData]= useState({})\n    let history = useHistory();\n    const [errorMessage, setErrorMessage]= useState(false)\n\n    const formik = useFormik({\n        initialValues: {\n            email:'',\n            password: ''\n        },\n        validate,\n        onSubmit: values => {\n            setFetchPlans(true)\n            setInputUserData(values)\n        },\n    });\n\n    const submitHandler = async(event) => {\n        event.preventDefault();\n        formik.handleSubmit(event);\n    }\n\n    useEffect(() => {\n        if (fetchPlans) {\n        fetch(`${reqUrl}/users/login`, {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify(inputUserData)\n        })\n            .then(res => res.json())\n            .then(data => {\n                if (Object.keys(data).length === 0) {\n                    throw Error\n                } else {\n                    setToken(data.token)\n                    setUserData(data.user)\n                }\n            })\n            .catch(e => setErrorMessage(true))\n        }\n    } , [inputUserData])\n\n    useEffect(()=>{\n        if (userData !== undefined && fetchPlans) {\n            history.push(\"/plans\", { from: '/home' });\n            closeAllModals()\n            setErrorMessage(false)\n        }\n    }, [userData])\n\n    return(\n        <form autoComplete=\"off\">\n            <input className='modal-input'\n                   data-testid=\"required-input-email\"\n                   type='email'\n                   name='email'\n                   onChange={formik.handleChange}\n                   value={formik.values.email}\n                   placeholder=\"email\" />\n            { formik.errors.email ? <div className='errors'>{formik.errors.email}</div> : null}\n            <input className='modal-input'\n                   placeholder=\"password\"\n                   data-testid=\"required-input-password\"\n                   type='password'\n                   name='password'\n                   onChange={formik.handleChange}\n                   value={formik.values.password}\n            />\n            { formik.errors.password ?\n                <div className='errors'>{formik.errors.password}</div>\n                :\n                null}\n            {errorMessage ?\n                <div>\n                    <br/>\n                    <span className='errors'>Invalid data</span>\n                    <br/>\n                </div>\n                :\n                null}\n            <AllowGeolocation/>\n            <button type=\"button\"\n                    onClick={(event) => submitHandler(event)}\n                    className=\"btn btn-modal\">\n                sign in\n            </button>\n        </form>\n    )\n}","import React from 'react';\nimport { usePlanContext } from '../../context/context';\nimport { SignUpForm } from \"./SignUpForm\";\nimport { SignInForm } from './SignInForm';\n\nconst type = {\n    signIn: 'signIn',\n    signUp: 'signUp'\n}\n\nexport const Modal = () => {\n    const { modalType } = usePlanContext();\n    return (\n        <div className=\"modal fade\" id=\"Modal\" tabIndex=\"-1\" role=\"dialog\"\n             aria-labelledby=\"signInModal\" aria-hidden=\"true\">\n            <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                <div className=\"modal-content\">\n                    <div className=\"modal-body\">\n                        {modalType === type.signIn ?\n                            <h5 className=\"modal-title\" id=\"signInModalLongTitle\">welcome back</h5>\n                            :\n                            <h5 className=\"modal-title\" id=\"signInModalLongTitle\">create an account</h5>}\n                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                            <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                        <br/>\n                        <br/>\n                        {modalType === type.signIn ? <SignInForm /> : <SignUpForm />}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nexport const GuestUserButton = () => {\n    let history = useHistory()\n    const goToPlans = () => history.push('/plans');\n\n    return (<div>\n                <br/>\n                <button className='linked-text'\n                        aria-label='guest user'\n                        onClick={ goToPlans }>\n                    skip for now\n                </button>\n            </div>)\n}\n\n","import React from 'react';\nimport { usePlanContext } from \"../../context/context\";\n\nexport const SignInButton = () => {\n    const { setModalType } = usePlanContext()\n    return (\n        <button type=\"button\"\n                className='btn btn-intro'\n                data-toggle=\"modal\"\n                data-target=\"#Modal\"\n                aria-label=\"sign in\"\n                onClick={()=>setModalType('signIn')}>\n            <i className=\"fa fa-user\"/>\n        </button>\n)\n}\n","import React from 'react';\nimport { usePlanContext } from \"../../context/context\";\n\nexport const SignUpButton = () => {\n    const { setModalType } = usePlanContext()\n\n    return (\n        <button type=\"button\"\n                className=\"btn btn-intro\"\n                data-toggle=\"modal\"\n                data-target=\"#Modal\"\n                aria-label=\"sign up\"\n                onClick={()=> {setModalType('signUp')}}>\n            <i className=\"fa fa-user-plus\"/>\n        </button>\n        )\n}\n\n","export const sidebar = {\n    open: (height = 1000) => ({\n        clipPath: `circle(${height * 2 + 200}px at 100% 0px)`,\n        transition: {\n            type: \"spring\",\n            stiffness: 20,\n            restDelta: 2\n        }\n    }),\n    closed: {\n        clipPath: \"circle(10px at 100% 0px)\",\n        transition: {\n            delay: 0.3,\n            type: \"spring\",\n            stiffness: 400,\n            damping: 40\n        }\n    }\n};\n\nexport const variantsButtons = {\n    open: {\n        opacity: 1,\n        x:0,\n        transition: {\n            y: { stiffness: 1000, velocity: -100 }\n        }\n    },\n    closed: {\n        opacity: 0,\n        x:200,\n        transition: {\n            y: { stiffness: 1000 }\n        }\n    }\n};\n\nexport const variantsTitle = {\n    hidden : {\n        opacity: 0,\n        y:50\n    },\n    visible: {\n        opacity:1,\n        y:0,\n        transition: {\n            delay: 0.3\n        }\n    }\n}\n\nexport const variantsItems = {\n    hidden : {\n        opacity: 0,\n        x:-50\n    },\n    visible: {\n        opacity:1,\n        x:0,\n        transition: {\n            delay: 0.1\n        }\n    }\n}\n\nexport const variantsArrow = {\n    hidden : {\n        opacity: 0,\n        x:-50\n    },\n    visible: {\n        opacity:1,\n        x:0,\n        transition: {\n            delay: 0.1\n        }\n    }\n}","import React from \"react\";\nimport { Modal } from \"./Modal\";\nimport { GuestUserButton } from \"./guest-user-button\";\nimport { SignInButton } from \"./SignInButton\";\nimport { SignUpButton } from \"./SignUpButton\";\nimport { AnimatePresence, motion } from 'framer-motion'\nimport { variantsTitle } from \"../../utils/animationVariations\";\n\nexport const Home = () => {\n    return (\n        <div className='home'>\n            <Modal />\n            <div className='intro-content'>\n                <AnimatePresence>\n                    <motion.h1 variants={variantsTitle}\n                               initial='hidden'\n                               animate='visible'>hello</motion.h1>\n                    <SignUpButton />\n                    <SignInButton />\n                    <GuestUserButton/>\n                </AnimatePresence>\n            </div>\n        </div>\n    );\n}","import * as React from \"react\";\nimport { motion } from \"framer-motion\";\n\nconst Path = props => (\n    <motion.path\n        fill=\"transparent\"\n        strokeWidth=\"3\"\n        stroke=\"hsl(0, 0%, 18%)\"\n        strokeLinecap=\"round\"\n        {...props}\n    />\n);\n\nexport const MenuToggle = ({ toggle }) => (\n    <button className='button-header'\n            aria-label='options'\n            onClick={toggle}>\n        <svg width=\"20\" height=\"20\" viewBox=\"0 0 23 23\">\n            <Path\n                variants={{\n                    closed: { d: \"M 2 2.5 L 20 2.5\" },\n                    open: { d: \"M 3 16.5 L 17 2.5\" }\n                }}\n            />\n            <Path\n                d=\"M 2 9.423 L 20 9.423\"\n                variants={{\n                    closed: { opacity: 1 },\n                    open: { opacity: 0 }\n                }}\n                transition={{ duration: 0.1 }}\n            />\n            <Path\n                variants={{\n                    closed: { d: \"M 2 16.346 L 20 16.346\" },\n                    open: { d: \"M 3 2.5 L 17 16.346\" }\n                }}\n            />\n        </svg>\n    </button>\n);\n","import { usePlanContext } from \"../../context/context\";\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { motion } from \"framer-motion\";\nimport { variantsButtons as variants } from \"../../utils/animationVariations\";\n\nexport const LogOutButton = () => {\n    let history = useHistory();\n    const { token, setUserData, setToken, setFinishedDays, reqUrl } = usePlanContext();\n    const [logOut, setLogOut] = useState(false)\n\n    const handleLogOut = () => {\n        setLogOut(true)\n    }\n\n    useEffect(()=>{\n        if(logOut){\n            fetch(`${reqUrl}/users/logout`, {\n                method: 'POST',\n                headers: {'Content-Type': 'application/json', 'Authorization':`Bearer ${token}` }\n                })\n                .then(() => history.push(\"/home\"))\n                .then(()=> setUserData({}))\n                .then(()=>setFinishedDays([]))\n                .then(()=>setToken(''))\n                .catch(e => console.log(e))\n        }\n    }, [logOut])\n\n    return (\n        <motion.li variants={variants}\n                       whileHover={{ scale: 1.1 }}\n                       whileTap={{ scale: 0.95 }}\n                       className='icon-placeholder'\n                       onClick={handleLogOut}>\n                        <i className=\"fa fa-sign-out fa-2x\"/>\n        </motion.li>\n    )\n}","import * as React from \"react\";\nimport { motion } from \"framer-motion\";\nimport { LogOutButton } from \"../LogOutButton\";\nimport { usePlanContext } from \"../../../context/context\";\nimport { useHistory } from \"react-router-dom\";\nimport { variantsButtons } from \"../../../utils/animationVariations\";\nimport { salutation, languageName } from \"../../../utils/translations\";\n\nexport const Navigation = () => {\n    const { userData } = usePlanContext();\n    let history = useHistory();\n    const language = userData.language || languageName.english;\n\n    return (\n        <motion.ul>\n            {userData.username ?\n                <motion.li variants={variantsButtons}\n                           className='icon-placeholder-title'>{salutation[language]}, {userData.username}</motion.li>\n                :\n                <motion.li className='icon-placeholder-title'\n                           variants={variantsButtons}>Hello, user</motion.li>}\n            {userData.username ?\n                <>\n                    {(userData.role === 'admin') ?\n                        <motion.li variants={variantsButtons}\n                                       whileHover={{ scale: 1.1 }}\n                                       whileTap={{ scale: 0.95 }}\n                                       className='icon-placeholder'\n                                       onClick={() => history.push('/admin')}>\n                            <i className=\"fa fa-lock fa-2x\"/></motion.li>\n                        : null\n                    }\n                    <motion.li variants={variantsButtons}\n                                   whileHover={{ scale: 1.1 }}\n                                   whileTap={{ scale: 0.95 }}\n                                   className='icon-placeholder'\n                                   onClick={() => history.push('/plans')}>\n                        <i className=\"fa fa-th-list fa-2x\"/></motion.li>\n                    <motion.li variants={variantsButtons}\n                                   whileHover={{ scale: 1.1 }}\n                                   whileTap={{ scale: 0.95 }}\n                                   className='icon-placeholder'\n                                   onClick={() => history.push('/editUser')}>\n                        <i className=\"fa fa-cogs fa-2x\"/></motion.li>\n                    <LogOutButton/>\n                </>\n                : <motion.li variants={variantsButtons}\n                                 whileHover={{ scale: 1.1 }}\n                                 whileTap={{ scale: 0.95 }}\n                                 className='icon-placeholder'\n                                 onClick={()=>history.push('/home')}>\n                    <i className=\"fa fa-user-plus fa-2x\"/></motion.li>\n            }\n        </motion.ul>\n    )\n}\n","import * as React from \"react\";\nimport { useRef } from \"react\";\nimport { motion, useCycle } from \"framer-motion\";\nimport { useDimensions } from \"./useDimensions\";\nimport { MenuToggle } from \"./MenuToggle\";\nimport { Navigation } from \"./Navigation\";\nimport { sidebar } from \"../../../utils/animationVariations\";\n\nexport const HeaderDropdown = () => {\n    const [isOpen, toggleOpen] = useCycle(false, true);\n    const containerRef = useRef(null);\n    const { height } = useDimensions(containerRef);\n\n    return (\n        <motion.nav\n            initial={false}\n            animate={isOpen ? \"open\" : \"closed\"}\n            custom={height}\n            ref={containerRef}\n        >\n            <motion.div className=\"background\" variants={sidebar} />\n            <Navigation />\n            <MenuToggle toggle={() => toggleOpen()} />\n        </motion.nav>\n    );\n};\n","import { useEffect, useRef } from \"react\";\n\n// Naive implementation - in reality would want to attach\n// a window or resize listener. Also use state/layoutEffect instead of ref/effect\n// if this is important to know on initial client render.\n// It would be safer to  return null for unmeasured states.\nexport const useDimensions = ref => {\n    const dimensions = useRef({ width: 0, height: 0 });\n\n    useEffect(() => {\n        dimensions.current.width = ref.current.offsetWidth;\n        dimensions.current.height = ref.current.offsetHeight;\n    }, []);\n\n    return dimensions.current;\n};\n","import { usePlanContext } from \"../../context/context\";\nimport { useHistory } from \"react-router-dom\";\nimport { HeaderDropdown } from \"./HeaderDropdown/HeaderDropdown\";\n\nexport const Header = () => {\n    let history = useHistory();\n    const {setCoordinatesArray, coordinatesArray } = usePlanContext();\n\n    return (\n        <div className='header'>\n            <button className='header-button-left'\n                    aria-label='back'\n                    onClick={()=> {\n                history.goBack()\n                if(coordinatesArray) {\n                    setCoordinatesArray([])\n                }}}>\n                <i className=\"fa fa-chevron-left\"/>\n            </button>\n            <HeaderDropdown />\n        </div>\n    )\n}","import React, { useEffect, useState } from \"react\";\nimport { Header } from \"../Header/Header\";\nimport { usePlanContext } from '../../context/context'\nimport { useHistory } from \"react-router-dom\";\nimport { AnimatePresence, motion } from 'framer-motion'\nimport { variantsItems } from \"../../utils/animationVariations\";\n\n\nexport const Days = () => {\n    const { currentPlan, token, userData, setCurrentDayId, finishedDays, reqUrl } = usePlanContext()\n    const planID = currentPlan._id;\n    let history = useHistory();\n    const [days, setDays] = useState([])\n    const languageProperty= userData.language ? `${userData.language}Name`: 'englishName';\n\n    //getting all days of a plan\n    useEffect(() => {\n     fetch(`${reqUrl}/days/${planID}`, {\n         method: 'GET',\n         headers: {'Content-Type': 'application/json', 'Authorization':`Bearer ${token}` }\n        })\n         .then(res=>res.json())\n         .then(data=> {\n             setDays(data)\n         })\n         .catch(e=>console.log(e))\n    }, [])\n\n    const goToIntervals = (e) => {\n        setCurrentDayId(e.target.dataset.dayid)\n        history.push('./intervals')\n    }\n\n    const notFinished='data-field-not-finished';\n    const finished='data-field-finished';\n\n    return (\n        <div className='main-container'>\n            <Header />\n            <AnimatePresence>\n                {days.map(day =>\n                    <motion.button variants={variantsItems}\n                            initial='hidden'\n                            animate='visible'\n                            key={day._id}\n                            aria-label={day[languageProperty]}\n                            data-dayid={day._id}\n                            className={userData.language && finishedDays.has(day._id) ? finished : notFinished}\n                            onClick={e => goToIntervals(e)}>{day[languageProperty]}</motion.button>)\n                }\n            </AnimatePresence>\n        </div>\n    );\n}","import React, { useEffect } from \"react\";\nimport { Header } from \"../Header/Header\";\nimport { usePlanContext } from \"../../context/context\";\nimport { useHistory } from \"react-router-dom\";\nimport { AnimatePresence, motion } from 'framer-motion'\nimport { run, walk, languageName } from \"../../utils/translations\";\nimport { variantsArrow } from \"../../utils/animationVariations\";\n\nexport const Intervals = () => {\n    const { currentDayId, totalIntervals, setTotalIntervals, intervals, setIntervals, userData, reqUrl } = usePlanContext()\n    let history = useHistory();\n    const language = userData.language || languageName.english;\n\n    // getting intervals of a selected day\n    useEffect(() => {\n        fetch(`${reqUrl}/intervals/${currentDayId}`, {\n            method: 'GET',\n            headers: {'Content-Type': 'application/json' }\n        })\n            .then(res=>res.json())\n            .then(data=> {\n                setIntervals(data)\n            })\n            .catch(e=>console.log(e))\n    }, [])\n\n    // calculating total time\n    useEffect(()=>{\n        let total = 0;\n        intervals.forEach(interval=> total= total + interval.seconds)\n        setTotalIntervals(total)\n    }, [intervals])\n\n    return (\n        <div className='main-container'>\n            <Header />\n            <AnimatePresence>\n                <motion.button variants={variantsArrow}\n                               initial='hidden'\n                               animate='visible'\n                               className='start-button'\n                               onClick={()=>history.push('/timer')}><i className=\"fa fa-arrow-circle-right\"/></motion.button>\n                <p className='total-intervals'>\n                    <i className='fa fa-clock-o'/> {new Date(totalIntervals * 1000).toISOString().substr(14, 5)}</p>\n                {intervals.map(interval=>\n                    (interval.type === 'run') ?\n                        <p key={interval._id}>{run[language]}, {interval.seconds}</p> :\n                        <p key={interval._id}>{walk[language]}, {interval.seconds}</p>\n                )}\n            </AnimatePresence>\n        </div>\n    );\n}","import { usePlanContext } from '../../context/context'\nimport { Header } from \"../Header/Header\";\nimport { useHistory } from \"react-router-dom\";\nimport React, { useEffect } from \"react\";\nimport { AnimatePresence, motion } from 'framer-motion';\nimport { variantsItems } from \"../../utils/animationVariations\";\n\nexport const Plans = () => {\n    const {plans, userData, setCurrentPlan, token, setFinishedDays, fetchPlansAgain, setFetchPlansAgain, reqUrl } = usePlanContext();\n    let history = useHistory();\n    const languageProperty= userData.language? `${userData.language}Name`: 'englishName';\n    const goToDays = (e) => {\n        setCurrentPlan(plans[e.target.dataset.planIndex])\n        history.push('./days')\n    }\n    useEffect(() => {\n        //getting all finished days for a user\n        fetch(`${reqUrl}/users/finishedDays`, {\n            method: 'GET',\n            headers: {'Content-Type': 'application/json', 'Authorization':`Bearer ${token}` }\n        })\n            .then(res=>res.json())\n            .then(data=> setFinishedDays(new Map(data.map(i => [i.dayID, i.userID]))))\n            //fetching the plans again if admin updates them on admin page\n            .then(()=>setFetchPlansAgain(false))\n            .catch(e=>console.log(e))\n    }, [fetchPlansAgain])\n    return (\n        <div className='main-container'>\n            <Header />\n            <AnimatePresence>\n                {plans.map((plan, index)=>\n                    <motion.button variants={variantsItems}\n                                   initial='hidden'\n                                   animate='visible'\n                                   aria-label={plan[languageProperty]}\n                                   data-plan-index={index}\n                                   className='data-field-not-finished'\n                                   onClick={e=>goToDays(e)}>{plan[languageProperty]}</motion.button>)}\n            </AnimatePresence>\n            </div>\n    );\n}","export default __webpack_public_path__ + \"static/media/workout_countdown_haptic.149fb7bd.mp3\";","import React, { useState, useEffect } from 'react';\nimport { Header } from \"../Header/Header\";\nimport { usePlanContext } from \"../../context/context\";\nimport { ProgressBar } from \"react-bootstrap\";\nimport useSound from 'use-sound';\nimport workoutCountdown from '../../assets/workout_countdown_haptic.mp3';\nimport { useHistory } from \"react-router-dom\";\nimport { AnimatePresence, motion } from 'framer-motion';\nimport { variantsItems } from \"../../utils/animationVariations\";\nimport { run, walk, languageName } from \"../../utils/translations\";\n\nexport const Timer = ()=> {\n    const [shouldPlay, setShouldPlay] = useState(false)\n    const { totalIntervals,\n        intervals,\n        userData,\n        currentDayId,\n        token,\n        coordinatesArray,\n        setCoordinatesArray,\n        coordinatesObject,\n        setCoordinatesObject,\n        reqUrl\n        } = usePlanContext()\n\n    const [timeLeft, setTimeLeft] = useState(totalIntervals)\n    const totalTimePercentage = Math.floor((totalIntervals-timeLeft)/totalIntervals*100)\n\n    const [currentInterval, setCurrentInterval] = useState(intervals[0])\n    const [currentIntervalIndex, setCurrentIntervalIndex] = useState(0);\n    const [currentIntervalTime, setCurrentIntervalTime] = useState(currentInterval.seconds)\n    const intervalPercentage = Math.floor(((currentInterval.seconds - currentIntervalTime)/currentInterval.seconds *100))\n    const language = userData.language || languageName.english;\n    const [play]= useSound(workoutCountdown)\n    let history = useHistory();\n\n    useEffect(()=>{\n        // reduces time that is left for 1 sec each sec\n        if(shouldPlay && timeLeft > 0){\n            setTimeout(() => {\n                    setTimeLeft(timeLeft - 1)\n                },\n                1000)\n        // when time is up, if there is user, saves in db finished day\n        } else if ( timeLeft === 0 && Object.keys(userData).length !== 0) {\n            fetch(`${reqUrl}/users/finishedDay/${currentDayId}`,{\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json', 'Authorization': `Bearer ${token}`}})\n                .then(res => res.json())\n                .then(()=> history.push('/finishedDay'))\n                .catch(e => console.log(e))\n        } else if (timeLeft === 0) {\n            history.push('/finishedDay')\n        }\n\n        if (timeLeft%10 === 0) {\n            navigator.geolocation.getCurrentPosition(position => {\n                let currentArray=[position.coords.longitude, position.coords.latitude];\n\n                let currentObject = {latitude: position.coords.latitude, longitude: position.coords.longitude};\n\n                let newArray = coordinatesArray\n                newArray.push(currentArray)\n                setCoordinatesArray(newArray)\n\n                let temp = coordinatesObject\n                temp.push(currentObject)\n                setCoordinatesObject(temp);\n            })\n        }\n        },[shouldPlay, timeLeft])\n\n    useEffect(()=>{\n        // reduces the time of a current interval\n        if(shouldPlay && currentIntervalTime > 0){\n            setTimeout(() => {\n                    setCurrentIntervalTime(currentIntervalTime - 1)\n                },\n                1000)\n        // when interval is finished, goes to next interval\n        } else if (shouldPlay && currentIntervalTime === 0 ){\n            setCurrentIntervalIndex(currentIntervalIndex+1)\n        }\n        // plays tone on last 3 seconds\n        if(currentIntervalTime === 3){\n            play()\n        }\n    }, [shouldPlay, currentIntervalTime])\n\n\n    useEffect(() => {\n        // changes current interval\n        if (shouldPlay && currentIntervalIndex < intervals.length){\n            setCurrentInterval(intervals[currentIntervalIndex])\n            setCurrentIntervalTime(intervals[currentIntervalIndex].seconds)\n        }\n    }, [currentIntervalIndex])\n\n    return(\n        <div className='main-container'>\n            <Header />\n            <div className='timer'>\n                <AnimatePresence>\n                {(currentInterval.type === 'run') ?\n                    <motion.h2  variants={variantsItems}\n                                 initial='hidden'\n                                 animate='visible'\n                                 className='interval-type'>{run[language]}</motion.h2> :\n                    <motion.h2  variants={variantsItems}\n                                 initial='hidden'\n                                 animate='visible'\n                                 className='interval-type'>{walk[language]}</motion.h2>}\n                </AnimatePresence>\n                <div className=\"time\">{new Date(currentIntervalTime * 1000).toISOString().substr(14, 5)}</div>\n                <div>\n                    <button className='timer-button'\n                            aria-label='play pause'\n                            onClick={()=>setShouldPlay(!shouldPlay)}>\n                        {shouldPlay?<i className=\"fa fa-pause\"/>:<i className=\"fa fa-play\"/>}\n                    </button>\n                </div>\n                <p className='timer-intervals'>{currentIntervalIndex+1}/{intervals.length}</p>\n                <ProgressBar striped variant=\"warning\" now={intervalPercentage} />\n                <br/>\n                <span className='timer-intervals'><i className='fa fa-clock-o'/> {new Date(timeLeft * 1000).toISOString().substr(14, 5)}</span>\n                <ProgressBar  striped animated variant='success' now={totalTimePercentage}/>\n            </div>\n        </div>\n    )\n}","import React from \"react\";\nimport { usePlanContext } from \"../../context/context\";\nimport getPathLength from 'geolib/es/getPathLength';\n\nexport const FinishedData = () => {\n    const { totalIntervals, userData, coordinatesObject} = usePlanContext()\n\n    const userWeightInKG = userData.weight || 70;\n\n    const path = getPathLength(coordinatesObject);\n    const caloriesBurned = path/1000 * userWeightInKG * 1.036;\n    return (\n        <div>\n            <div className='finished-icons'><i className='fa fa-clock-o fa-2x'/></div>\n            <p> {new Date(totalIntervals * 1000).toISOString().substr(14, 5)}</p>\n            <div className='finished-icons'><i className='fa fa-arrows-h fa-2x'/></div>\n            <p>{path/1000} km</p>\n            <div className='finished-icons'><i className='fa fa-balance-scale fa-2x'/></div>\n            <p>{caloriesBurned} kcal</p>\n        </div>\n    )\n}","import { Header } from \"../Header/Header\";\nimport React, { Suspense } from \"react\";\nimport { usePlanContext } from \"../../context/context\";\nimport { FinishedData } from \"./FinishedData\";\nimport { AnimatePresence, motion } from 'framer-motion';\nimport { congrats, languageName, allowGeolocation } from \"../../utils/translations\";\nimport { variantsTitle } from \"../../utils/animationVariations\";\n\nexport const Finished = () => {\n    const { userData } = usePlanContext()\n    const language = userData.language || languageName.english;\n\n    return (\n        <div className='main-container'>\n            <Header />\n            <Suspense fallback={<div> Calculating results... </div>}>\n            <AnimatePresence>\n                <motion.h1 variants={variantsTitle}\n                           initial='hidden'\n                           animate='visible'\n                           className='finished-text'>\n                    {congrats[language]}{userData.username ? `, ${userData.username}!` : `!`}\n                </motion.h1>\n                {navigator.geolocation\n                    ?\n                    <FinishedData />\n                    :\n                    <p>{allowGeolocation[language]}</p>\n                }\n            </AnimatePresence>\n            </Suspense>\n            </div>\n    )\n}","import React, { useEffect, useState } from 'react';\nimport { useFormik } from 'formik';\nimport { usePlanContext } from \"../../context/context\";\nimport { passwordChange,\n        required,\n        passwordLongerThan,\n        passwordContainsLetters,\n        passwordSpecialCharacters,\n        passwordContainsNumber,\n        passwordSaved} from \"../../utils/translations\";\n\nexport const PasswordChange = () => {\n    // getting data from context\n    const { token, userData, reqUrl } = usePlanContext();\n\n    // component-specific states\n    const [inputPassword, setInputPassword] = useState({})\n    const [updatePassword, setUpdatePassword] = useState(false);\n    const [patch, setPatch] = useState(false)\n    const [message, setMessage] = useState('')\n\n    const validate = values => {\n        const errors = {};\n        if (!values.password) {\n            errors.password = required[userData.language];\n        } else if (values.password.length < 8) {\n            errors.password = passwordLongerThan[userData.language];\n        } else if (!/[A-Za-z]/.test(values.password)) {\n            errors.password = passwordContainsLetters[userData.language];\n        } else if (!/[@#$^+=!]/.test(values.password)) {\n            errors.password = passwordSpecialCharacters[userData.language];\n        } else if (!/[0-9]/.test(values.password)) {\n            errors.password = passwordContainsNumber[userData.language];\n        }\n        return errors;\n    };\n\n    const formik = useFormik({\n        initialValues: {\n            password: '',\n        },\n        validate,\n        onSubmit: values => {\n            setInputPassword(values)\n            setPatch(true)\n        },\n    });\n\n    const passwordChangeText = `${passwordChange[userData.language]}`;\n\n    useEffect(() => {\n        if(patch){\n            fetch(`${reqUrl}/users/me`, {\n                method: 'PATCH',\n                headers: {'Content-Type': 'application/json', 'Authorization':`Bearer ${token}`},\n                body: JSON.stringify(inputPassword)\n            })\n                .then(res => res.json())\n                .then(()=>setPatch(false))\n                .then(()=>setMessage(passwordSaved[userData.language]))\n                .catch(e => setMessage('Something went wrong, try again later'))\n        }\n    }, [patch])\n\n    return (\n        <div className='settings controls'>\n            {updatePassword ?\n                <form autoComplete=\"off\" onSubmit={formik.handleSubmit}>\n                    <input type='password'\n                           name='password'\n                           className='edit-user-input'\n                           placeholder={passwordChangeText}\n                           onChange={formik.handleChange}\n                           value={formik.values.password}\n                    />\n                    <br/>\n                    {message}\n                    { formik.errors.password ?\n                        <div>{formik.errors.password}</div> :\n                        <button className='btn btn-edit'\n                                aria-label='confirm'\n                                type='submit'>\n                            <i className=\"fa fa-check\"/>\n                        </button>}\n                    <button className='btn btn-edit'\n                            aria-label='close'\n                            onClick={()=> {\n                                setUpdatePassword(false)\n                                setMessage('')}}>\n                        <i className=\"fa fa-times\"/>\n                    </button>\n                </form>\n                : <button className='btn btn-edit'\n                          aria-label='change password'\n                          onClick={()=> setUpdatePassword(true)}>\n                    <i className=\"fa fa-key\"/>\n                </button>\n            }\n        </div>\n    )\n}","import React , { useEffect, useState } from 'react'\nimport { usePlanContext } from \"../../context/context\";\nimport { useHistory } from \"react-router-dom\";\n\nexport const LogOutAllDevices = () => {\n    const { token, setUserData, setFinishedDays, setToken, reqUrl } = usePlanContext();\n    const [logOut, setLogOut] = useState(false)\n    const history = useHistory()\n\n    const [clicked, setClicked] = useState(false);\n\n    const handleLogOutAll = () => {\n        setLogOut(true)\n    }\n\n    useEffect(()=>{\n        if(logOut){\n            fetch(`${reqUrl}/users/logoutAll`, {\n                method: 'POST',\n                headers: {'Content-Type': 'application/json', 'Authorization':`Bearer ${token}`}\n            })\n                .then(()=>setLogOut(false))\n                .then(()=>history.push('/home'))\n                .then(()=>setUserData({}))\n                .then(()=>setFinishedDays([]))\n                .then(()=>setToken(''))\n                .catch(e => console.log(e))\n        }\n    }, [logOut])\n    return (\n        <div className='controls'>\n            {clicked ? <div>\n                    <button onClick={handleLogOutAll}\n                            aria-label='log out from all places'\n                            className='btn btn-edit'>\n                        <i className=\"fa fa-globe\"/>\n                    </button>\n                    <button onClick={()=>setClicked(false)}\n                            aria-label='close'\n                            className='btn btn-edit'>\n                        <i className=\"fa fa-times\"/>\n                    </button>\n                </div>\n                :\n                <button onClick={()=>setClicked(true)}\n                        aria-label='log out'\n                        className='btn btn-edit'>\n                    <i className=\"fa fa-sign-out\"/>\n                </button>\n            }\n            </div>\n    )\n}","import React, { useEffect, useState } from 'react'\nimport { usePlanContext } from \"../../context/context\";\nimport { useHistory } from \"react-router-dom\";\nimport { deletingAccount } from \"../../utils/translations\";\n\nexport const DeleteAccount = () => {\n    const { token, setUserData, userData, setFinishedDays, setToken, reqUrl } = usePlanContext();\n    const history = useHistory();\n    const [remove, setRemove] = useState(false);\n    const [confirmButton, setConfirmButton] = useState(false);\n\n    const deletingAccountText = `${deletingAccount[userData.language]}`\n\n    useEffect(()=>{\n        if(remove){\n            fetch(`${reqUrl}/users/me`, {\n                method: 'DELETE',\n                headers: {'Content-Type': 'application/json', 'Authorization':`Bearer ${token}` }\n            })\n                .then(() => history.push(\"/home\"))\n                .then(()=> setUserData({}))\n                .then(()=>setFinishedDays([]))\n                .then(()=>setToken(''))\n                .catch(e => console.log(e))\n        }\n    }, [remove])\n    return (\n        <div className='controls'>\n            {confirmButton ?\n            <>\n                <span>{deletingAccountText}, {userData.username}?</span>\n                <br/>\n                <button onClick={()=>setRemove(true)}\n                        aria-label='confirm'\n                        className='btn btn-edit'>\n                    <i className=\"fa fa-check\"/>\n                </button>\n                <button onClick={()=>setConfirmButton(false)}\n                        aria-label='close'\n                        className='btn btn-edit confirm'>\n                    <i className=\"fa fa-times\"/>\n                </button>\n            </>\n            :\n            <button onClick={()=>setConfirmButton(true)}\n                    aria-label='delete account'\n                    className='btn btn-edit'>\n                <i className=\"fa fa-trash\"/>\n            </button>\n            }\n        </div>\n    )\n}","import React, { useEffect, useState } from 'react'\nimport { usePlanContext } from \"../../context/context\";\nimport { useFormik } from 'formik';\nimport { Dropdown, DropdownButton } from \"react-bootstrap\";\nimport { required, insertValidWeight, insertValidHeight, invalidEmail, languageName } from \"../../utils/translations\";\n\n\nexport const EditUserData = () => {\n    const { token, setUserData, userData, reqUrl } = usePlanContext();\n    const [edit, setEdit] = useState(false)\n\n    const [inputUserData, setInputUserData]= useState({})\n    const [language, setLanguage] = useState(userData.language)\n\n    const validate = values => {\n        const errors = {};\n        if (!values.email) {\n            errors.email = required[userData.language];\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n            errors.email = invalidEmail[userData.language];\n        }\n        if (!values.username) {\n            errors.username = required[userData.language];\n        }\n        if (!/^\\d+$/.test(values.weight)) {\n            errors.weight = insertValidWeight[userData.language];\n        }\n        if (!/^\\d+$/.test(values.height)) {\n            errors.height = insertValidHeight[userData.language];\n        }\n        return errors;\n    };\n\n    const formik = useFormik({\n        initialValues: {\n            email: userData.email,\n            username: userData.username,\n            weight: userData.weight?userData.weight:0,\n            height: userData.height?userData.height:0\n        },\n        validate,\n        onSubmit: values => {\n            setInputUserData({...values, language:language})\n            setEditable(false)\n            setEdit(true)\n        },\n    });\n\n    const [editable, setEditable] = useState(false);\n\n    useEffect(() => {\n        if(edit){\n            fetch(`${reqUrl}/users/me`, {\n                method: 'PATCH',\n                headers: {'Content-Type': 'application/json', 'Authorization':`Bearer ${token}`},\n                body: JSON.stringify(inputUserData)\n            })\n                .then(res => res.json())\n                .then(data => setUserData(data))\n                .then(()=>setEdit(false))\n                .catch(e => console.log(e))\n        }\n    }, [edit])\n    return (\n            <div className='edit-user-data'>\n                {(editable === false) ?\n                    <div>\n                        <span className='edit-user-span'><i className=\"fa fa-user-o colored\"/></span>\n                        <span  className='edit-user-span'> {userData.username}</span>\n                        <br/>\n                        <span className='edit-user-span'><i className=\"fa fa-envelope-o colored\"/></span>\n                        <span  className='edit-user-span' > {userData.email}</span>\n                        <br/>\n                        <span className='edit-user-span'><i className=\"fa fa-balance-scale colored\"/></span>\n                        <span className='edit-user-span' > {userData.weight?`${userData.weight} kg` :'0 kg'}</span>\n                        <br/>\n                        <span className='edit-user-span'><i className=\"fa fa-arrows-v colored\"/></span>\n                        <span className='edit-user-span' > {userData.height?`${userData.height} cm` :'0 cm'}</span>\n                        <br/>\n                        <span className='edit-user-span'><i className=\"fa fa-language colored\"/></span>\n                        <span className='edit-user-span' > {userData.language}</span>\n                        <br/>\n                        <button className='btn btn-edit'\n                                aria-label='edit'\n                                onClick={() => setEditable(!editable)}><i className=\"fa fa-pencil\"/></button>\n                    </div>\n                    :\n                    <div>\n                    <form onSubmit={formik.handleSubmit}>\n                        <i className=\"fa fa-user-o colored\"/>\n                        <input name=\"username\"\n                               value={formik.values.username}\n                               onChange={formik.handleChange}\n                               className='edit-user-input'\n                               defaultValue={userData.username}/>\n                        {formik.errors.username ? (<div>{formik.errors.username}</div>) : null}\n                        <br/>\n                        <i className=\"fa fa-envelope-o colored\"/>\n                        <input name=\"email\"\n                               value={formik.values.email}\n                               onChange={formik.handleChange}\n                               className='edit-user-input'\n                               defaultValue={userData.email}/>\n                        {formik.errors.email ? (<div>{formik.errors.email}</div>) : null}\n                        <br/>\n                        <i className=\"fa fa-balance-scale colored\"/>\n                        <input name=\"weight\"\n                               value={formik.values.weight}\n                               onChange={formik.handleChange}\n                               className='edit-user-input'\n                               defaultValue={userData.weight?userData.weight:0}/>\n                        {formik.errors.weight ? (<div>{formik.errors.weight}</div>) : null}\n                        <br/>\n                        <i className=\"fa fa-arrows-v colored\"/>\n                        <input name=\"height\"\n                               value={formik.values.height}\n                               onChange={formik.handleChange}\n                               className='edit-user-input'\n                               defaultValue={userData.height? userData.height: 0}/>\n                        {formik.errors.height ? (<div>{formik.errors.height}</div>) : null}\n                        <br/>\n                        <DropdownButton className='styled-dropdown' id=\"dropdown-item-button-edit-user\" title={language} onClick={e=>e.preventDefault()}>\n                            <Dropdown.Item as=\"button\" onSelect={()=> setLanguage(languageName.english)}>english</Dropdown.Item>\n                            <Dropdown.Item as=\"button\" onSelect={()=>setLanguage(languageName.italian)}>italian</Dropdown.Item>\n                            <Dropdown.Item as=\"button\" onSelect={()=>setLanguage(languageName.dutch)}>dutch</Dropdown.Item>\n                            <Dropdown.Item as=\"button\" onSelect={()=>setLanguage(languageName.serbian)}>serbian</Dropdown.Item>\n                            <Dropdown.Item as=\"button\" onSelect={()=>setLanguage(languageName.french)}>french</Dropdown.Item>\n                        </DropdownButton>\n\n                        <button type='submit'\n                                className='btn btn-edit confirm'\n                                aria-label='confirm'>\n                            <i className=\"fa fa-check confirm\"/>\n                        </button>\n                    </form>\n                    </div>\n                }\n            </div>\n    )\n}","import React from 'react';\nimport { Header } from \"../Header/Header\";\nimport { PasswordChange } from \"./PasswordChange\";\nimport { LogOutAllDevices } from \"./LogOutAllDevices\";\nimport { DeleteAccount } from \"./DeleteAccount\";\nimport { EditUserData } from \"./EditUserData\";\n\nexport const EditUser = () => {\n    return (\n        <div className='editing'>\n            <Header />\n            <div className='edit-user'>\n                <i className=\"fa fa-user fa-4x\"/>\n                <EditUserData />\n            </div>\n            <div>\n                <div className='settings'>\n                    <div><i className=\"fa fa-cog fa-4x\"/></div>\n                    <PasswordChange />\n                    <LogOutAllDevices />\n                    <DeleteAccount />\n                </div>\n\n            </div>\n        </div>\n    )\n}\n\n","import React, { useEffect, useState } from \"react\";\nimport { usePlanContext } from \"../../context/context\";\nimport { Dropdown, DropdownButton } from \"react-bootstrap\";\nimport { useFormik } from 'formik';\n\n// formik validation of updated user info\nconst validate = values => {\n    const errors = {};\n    if (!values.email) {\n        errors.email = 'Required';\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n        errors.email = 'Invalid email';\n    }\n    if (!values.username) {\n        errors.username = 'Required';\n    }\n    if (!/^\\d+$/.test(values.weight)) {\n        errors.weight = 'insert valid weight in kgs';\n    }\n    if (!/^\\d+$/.test(values.height)) {\n        errors.height = 'insert valid height in cm';\n    }\n    return errors;\n};\n\nexport const AdminEditUser = () => {\n    const { token, reqUrl } = usePlanContext();\n\n    const [userList, setUserList]= useState([])\n    const [userUpdateVisible, setUserUpdateVisible] = useState(false)\n\n    const [selectedUser, setSelectedUser] = useState({})\n    const [deleteUser, setDeleteUser] = useState(false);\n    const [updateUsersList, setUpdateUsersList] = useState(false)\n\n    const [updateSelectedUser, setUpdateSelectedUser] = useState(false)\n    const [language, setLanguage] = useState('english');\n    const [updateUser, setUpdateUser] = useState(false);\n    const [inputData, setInputData] = useState({});\n    const [message, setMessage] = useState(false)\n\n    const formik = useFormik({\n        initialValues: {\n            email:'',\n            username:'',\n            weight: '',\n            height: ''\n        },\n        validate,\n        onSubmit: values => {\n            setUpdateUser(true)\n            setInputData({...values, language:language})\n        },\n    });\n    // admin changes user\n    useEffect(() => {\n        if (updateUser) {\n            fetch(`${reqUrl}/users/${selectedUser._id}`,{\n                method: 'PATCH',\n                headers: { 'Content-Type': 'application/json', 'Authorization':`Bearer ${token}`},\n                body: JSON.stringify(inputData)})\n                .then(res => res.json())\n                .then(() => setUpdateUsersList(true))\n                .then(()=> setMessage(true))\n                .then(()=>setUpdateUsersList(true))\n                .catch(e => console.log('something went wrong'))\n        }\n    } , [inputData])\n\n    // admin removes user\n    useEffect(()=>{\n        if(deleteUser) {\n            fetch(`${reqUrl}/users/${selectedUser._id}`, {\n                method: 'DELETE',\n                headers: {'Content-Type': 'application/json', 'Authorization':`Bearer ${token}`}\n            })\n                .then(res=>res.json())\n                .then(()=>setSelectedUser({}))\n                .then(()=> setUpdateUsersList(true))\n                .then(()=>setDeleteUser(false))\n                .catch(e=>console.log(e))\n        }\n    }, [deleteUser])\n\n    // update list of users\n    useEffect(()=>{\n        fetch(`${reqUrl}/users/usersList`, {\n            method: 'GET',\n            headers: {'Content-Type': 'application/json', 'Authorization':`Bearer ${token}`}\n        })\n            .then(res=>res.json())\n            .then(data=>setUserList(data))\n            .then(()=>setUpdateUsersList(false))\n            .catch(e=>console.log(e))\n    }, [updateUsersList])\n\n    return(\n        <div>\n            <div><i className=\"fa fa-user-plus fa-2x \"/></div>\n            <div className='admin-user'>\n                {userUpdateVisible?\n                    <div>\n                        <DropdownButton id=\"dropdown-item-button-admin\" title={selectedUser.username?selectedUser.username:'find a user'} className='dropdown-users'>\n                            {userList.map(user => <Dropdown.Item data-userID={user._id} onSelect={()=>setSelectedUser(user)}>{user.username}</Dropdown.Item>)}\n                        </DropdownButton>\n                        {(Object.keys(selectedUser).length === 0) ?\n                            null\n                            :\n                            <div>\n                                {updateSelectedUser ?\n                                    <form onSubmit={formik.handleSubmit} autoComplete=\"off\">\n                                        <br/>\n                                        <span><i className=\"fa fa-user-o colored\"/></span>\n                                        <br/>\n                                        <input name=\"username\"\n                                               value={formik.values.username}\n                                               onChange={formik.handleChange}\n                                               className='admin-input'\n                                               defaultValue={selectedUser.username}/>\n                                        {formik.errors.username ? (<div>{formik.errors.username}</div>) : null}\n                                        <br/>\n                                        <span><i className=\"fa fa-envelope-o colored\"/></span>\n                                        <br/>\n                                        <input  name=\"email\"\n                                                value={formik.values.email}\n                                                onChange={formik.handleChange}\n                                                className='admin-input'\n                                                defaultValue={selectedUser.email}/>\n                                        {formik.errors.email ? (<div>{formik.errors.email}</div>) : null}\n                                        <br/>\n                                        <span><i className=\"fa fa-arrows-v colored\"/></span>\n                                        <br/>\n                                        <input name=\"height\"\n                                               value={formik.values.height}\n                                               onChange={formik.handleChange}\n                                               className='admin-input'\n                                               defaultValue={selectedUser.height}/>\n                                        {formik.errors.height ? (<div>{formik.errors.height}</div>) : null}\n                                        <br/>\n                                        <span><i className=\"fa fa-balance-scale colored\"/></span>\n                                        <br/>\n                                        <input name=\"weight\"\n                                               value={formik.values.weight}\n                                               onChange={formik.handleChange}\n                                               className='admin-input'\n                                               defaultValue={selectedUser.weight}/>\n                                        {formik.errors.weight ? (<div>{formik.errors.weight}</div>) : null}\n                                        <br/>\n                                        <span><i className=\"fa fa-language colored\"/></span>\n                                        <br/>\n                                        <DropdownButton id=\"dropdown-item-button-admin\" title={language} onClick={e=>e.preventDefault()}>\n                                            <Dropdown.Item as=\"button\" onSelect={()=> setLanguage('english')}>english</Dropdown.Item>\n                                            <Dropdown.Item as=\"button\" onSelect={()=>setLanguage('italian')}>italian</Dropdown.Item>\n                                            <Dropdown.Item as=\"button\" onSelect={()=>setLanguage('dutch')}>dutch</Dropdown.Item>\n                                            <Dropdown.Item as=\"button\" onSelect={()=>setLanguage('serbian')}>serbian</Dropdown.Item>\n                                            <Dropdown.Item as=\"button\" onSelect={()=>setLanguage('french')}>french</Dropdown.Item>\n                                        </DropdownButton>\n                                        {message? <span>user updated!</span>:null}\n                                        <br/>\n                                        <button type='submit'\n                                                aria-label='confirm'\n                                                className='admin-buttons'><i className=\"fa fa-check\"/></button>\n                                        <button className='admin-buttons'\n                                                aria-label='close'\n                                                onClick={()=> {\n                                            setUpdateSelectedUser(false);\n                                            setMessage(false)\n                                        }}><i className=\"fa fa-times\"/></button>\n                                    </form>\n                                    :\n                                    <div>\n                                        <br/>\n                                        <span><i className=\"fa fa-user-o colored\"/></span>\n                                        <br/>\n                                        <span> {selectedUser.username}</span>\n                                        <br/>\n                                        <span><i className=\"fa fa-envelope-o colored\"/></span>\n                                        <br/>\n                                        <span> {selectedUser.email}</span>\n                                        <br/>\n                                        <span><i className=\"fa fa-language colored\"/></span>\n                                        <br/>\n                                        <span> {selectedUser.language}</span>\n                                        <br/>\n                                        <span><i className=\"fa fa-arrows-v colored\"/></span>\n                                        <br/>\n                                        <span> {selectedUser.height} cm</span>\n                                        <br/>\n                                        <span><i className=\"fa fa-balance-scale colored\"/></span>\n                                        <br/>\n                                        <span> {selectedUser.weight} kg</span>\n                                        <br/>\n                                        <button className='admin-buttons'\n                                                aria-label='update selected user'\n                                                onClick={()=>setUpdateSelectedUser(true)}><i className=\"fa fa-pencil\"/></button>\n                                    </div>\n                                }\n                                <button className='admin-buttons'\n                                        aria-label='delete user'\n                                        onClick={()=>setDeleteUser(true)}><i className=\"fa fa-trash-o\"/></button>\n                            </div>\n                        }\n                        <button className='admin-buttons'\n                                aria-label='close'\n                                onClick={()=> {\n                            setUserUpdateVisible(false)\n                            setSelectedUser({})\n                        }}><i className=\"fa fa-times\"/></button>\n                    </div>\n                    :<button className='admin-buttons'\n                             aria-label='update a user'\n                             onClick={()=>setUserUpdateVisible(true)}>update a user</button>}\n                <br/>\n            </div>\n        </div>\n    )\n}","import React, { useEffect, useState } from 'react';\nimport { useFormik } from 'formik';\nimport { usePlanContext } from \"../../context/context\";\n\nconst required= 'Required';\n\n// validation of new plan inputs\nconst validate = values => {\n    const errors = {};\n    if (!values.englishName) {\n        errors.englishName = required;\n    }\n    if (!values.italianName) {\n        errors.italianName = required;\n    }\n    if (!values.frenchName) {\n        errors.frenchName = required;\n    }\n    if (!values.serbianName) {\n        errors.serbianName = required;\n    }\n    if (!values.dutchName) {\n        errors.dutchName = required;\n    }\n    return errors;\n};\n\nexport const AdminAddsPlan = ()=> {\n    const { token, reqUrl, setFetchPlansAgain } = usePlanContext();\n\n    const [createPlan, setCreatePlan] = useState(false);\n    const [inputData, setInputData] = useState({});\n    const [message, setMessage] = useState(false)\n\n    const formik = useFormik({\n        initialValues: {\n            englishName:'',\n            italianName:'',\n            frenchName: '',\n            serbianName: '',\n            dutchName: ''\n        },\n        validate,\n        onSubmit: values => {\n            setCreatePlan(true)\n            setInputData(values)\n        },\n    });\n    useEffect(() => {\n        if (createPlan) {\n            fetch(`${reqUrl}/plans`,{\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json', 'Authorization':`Bearer ${token}`},\n                body: JSON.stringify(inputData)})\n                .then(res => res.json())\n                .then(()=> setMessage(true))\n                .then(()=> setFetchPlansAgain(true))\n                .catch(e => console.log('something went wrong'))\n        }\n    } , [inputData])\n    return (\n        <form onSubmit={formik.handleSubmit} autoComplete=\"off\">\n            <input name=\"englishName\"\n                   value={formik.values.englishName}\n                   onChange={formik.handleChange}\n                   className='admin-input'\n                   placeholder='english name'/>\n            {formik.errors.englishName ? (<div>{formik.errors.englishName}</div>) : null}\n            <br/>\n            <input  name=\"italianName\"\n                    value={formik.values.italianName}\n                    onChange={formik.handleChange}\n                    className='admin-input'\n                    placeholder='italian name'/>\n            {formik.errors.italianName ? (<div>{formik.errors.italianName}</div>) : null}\n            <br/>\n            <input  name=\"frenchName\"\n                    value={formik.values.frenchName}\n                    onChange={formik.handleChange}\n                    className='admin-input'\n                    placeholder='french name'/>\n            {formik.errors.frenchName ? (<div>{formik.errors.frenchName}</div>) : null}\n            <br/>\n            <input  name=\"serbianName\"\n                    value={formik.values.serbianName}\n                    onChange={formik.handleChange}\n                    className='admin-input'\n                    placeholder='serbian name'/>\n            {formik.errors.serbianName ? (<div>{formik.errors.serbianName}</div>) : null}\n            <br/>\n            <input  name=\"dutchName\"\n                    value={formik.values.dutchName}\n                    onChange={formik.handleChange}\n                    className='admin-input'\n                    placeholder='dutch name' />\n            {formik.errors.dutchName ? (<div>{formik.errors.dutchName}</div>) : null}\n            <br/>\n            {message? <span>plan created!</span>:null}\n            <button type='submit'\n                    aria-label='confirm'\n                    className='admin-buttons'><i className=\"fa fa-check\" aria-hidden=\"true\"/></button>\n        </form>\n    )\n}","import { usePlanContext } from \"../../context/context\";\nimport { Dropdown, DropdownButton } from \"react-bootstrap\";\nimport React, { useEffect, useState } from \"react\";\n\n\nexport const AdminUpdatesPlan = () => {\n    const { plans, token, setFetchPlansAgain, reqUrl } = usePlanContext();\n    const [selectedPlan, setSelectedPlan] = useState({});\n    const [remove, setRemove]  = useState(false);\n    const [message, setMessage]= useState(false)\n\n    useEffect(()=>{\n        if (remove){\n            fetch(`${reqUrl}/plans/${selectedPlan._id}`, {\n                method: 'DELETE',\n                headers: {'Content-Type': 'application/json', 'Authorization':`Bearer ${token}`}\n            })\n                .then(res=>res.json())\n                .then(()=>setRemove(false))\n                .then(()=>setMessage(true))\n                .then(()=> setFetchPlansAgain(true))\n                .catch(e=>console.log(e))\n        }\n    }, [remove])\n\n    return(\n        <div>\n            <DropdownButton id='dropdown-btn-admin-plan' title={selectedPlan.englishName?selectedPlan.englishName:'find a plan'}>\n                {plans.map(plan => <Dropdown.Item data-planID={plan._id} onSelect={()=>setSelectedPlan(plan)}>{plan.englishName}</Dropdown.Item>)}\n            </DropdownButton>\n            <br/>\n            {message ? <span>plan removed</span> : null}\n            <button className='admin-buttons'\n                    onClick={()=>setRemove(true)}>\n                remove selected plan\n            </button>\n        </div>\n    )\n}","import React, { useState } from \"react\";\nimport { Header } from \"../Header/Header\";\nimport { AdminEditUser } from \"./AdminEditUser\";\nimport { AdminAddsPlan } from \"./AdminAddsPlan\";\nimport { AdminUpdatesPlan } from \"./AdminUpdatesPlan\";\n\n\nexport const AdminPage = () => {\n\n    const [addPlan, setAddPlan] = useState(false);\n    const [adminUpdatesPlan, setAdminUpdatesPlan]= useState(false)\n\n    return(\n        <div className='admin-page'>\n            <Header/>\n            <h4 className='admin-title'><i className=\"fa fa-lock fa-3x\"/></h4>\n            <div>\n                <AdminEditUser />\n            </div>\n            <div><i className=\"fa fa-list fa-2x \"/></div>\n            <div className='admin-plans'>\n                {addPlan ?\n                    <div>\n                        <AdminAddsPlan />\n                        <button className='admin-buttons'\n                                onClick={() => setAddPlan(false)}>\n                            <i className=\"fa fa-times\" aria-hidden=\"true\"/>\n                        </button>\n                    </div>\n                    :\n                    <button className='admin-buttons'\n                            aria-label='add a new plan'\n                            onClick={() => setAddPlan(true)}>\n                        add a new plan\n                    </button>\n                    }\n                <br/>\n                {adminUpdatesPlan ?\n                    <div>\n                        <AdminUpdatesPlan />\n                        <button className='admin-buttons'\n                                aria-label='close'\n                                onClick={() => setAdminUpdatesPlan(false)}>\n                            <i className=\"fa fa-times\" aria-hidden=\"true\"/>\n                        </button>\n                    </div>\n                    :\n                    <button className='admin-buttons'\n                            aria-label='update a plan'\n                            onClick={() => setAdminUpdatesPlan(true)}>\n                        update a plan\n                    </button>\n                }\n            </div>\n        </div>\n    )\n}","import './App.css';\nimport React from 'react';\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport { Home } from './components/Home/Home';\nimport { Days } from './components/pages/Days';\nimport { Intervals } from './components/pages/Intervals';\nimport { Plans } from './components/pages/Plans';\nimport { PlanProvider } from './context/context'\nimport { Timer } from \"./components/Timer/Timer\";\nimport { Finished } from './components/Timer/Finished';\nimport { EditUser } from \"./components/EditUser/EditUser\";\nimport { AdminPage } from \"./components/AdminPage/AdminPage\";\n\nfunction App() {\n  return (\n        <PlanProvider className=\"App\">\n            <HashRouter>\n                <Switch>\n                    <Route path=\"/intervals\" component={ Intervals } />\n                    <Route path=\"/days\" component={ Days } />\n                    <Route path=\"/plans\" component={ Plans } />\n                    <Route path='/timer' component={ Timer }/>\n                    <Route path='/finishedDay' component={ Finished } />\n                    <Route path='/editUser' component={ EditUser } />\n                    <Route path='/admin' component={ AdminPage } />\n                    <Route exact path='/home' component={ Home } />\n                    <Route exact path='/' component={ Home } />\n                </Switch>\n            </HashRouter>\n        </PlanProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}